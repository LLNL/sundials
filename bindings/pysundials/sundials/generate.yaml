# -----------------------------------------------------------------
# Programmer(s): Cody J. Balos @ LLNL
# -----------------------------------------------------------------
# SUNDIALS Copyright Start
# Copyright (c) 2002-2025, Lawrence Livermore National Security
# and Southern Methodist University.
# All rights reserved.
#
# See the top-level LICENSE and NOTICE files for details.
#
# SPDX-License-Identifier: BSD-3-Clause
# SUNDIALS Copyright End
# -----------------------------------------------------------------
# This YAML file is used to instruct the generate.py script on
# how to generate some of the nanobind code needed for the
# core module of pysundials.
# -----------------------------------------------------------------

modules:
  all:
    fn_exclude_by_name__regex:
    - "Free" # Free and destroy functions should not need to be called as all objects on the Python side are RAII ClassView objects
    - "Destroy"
    - "NewEmpty" # No need to call NewEmpty functions in Python
    - "CopyOps" # No need to call CopyOps functions in Python
    - "Space" # Space functions are deprecated, so dont expose them in Python
    # TODO(CJB): support SetOptions
    # Due to the need to convert between sys.argv and C argv, we need to do custom wrappers of these
    - "SetOptions" 
    macro_define_include_by_name__regex:
    - "^SUN_"
  sundials_adaptcontroller:
    path: sundials/pysundials_adaptcontroller_generated.hpp
    headers:
    - ../../include/sundials/sundials_adaptcontroller.h
  sundials_adjointcheckpointscheme:
    path: sundials/pysundials_adjointcheckpointscheme_generated.hpp
    headers:
    - ../../include/sundials/sundials_adjointcheckpointscheme.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **, so we do something custom
    - "Set.*Fn" # nanobind cannot bind to functions which take a function pointer, so we do something custom
    - "SetContent" # no need to set content from Python, so we don't interface it
    - "GetContent" # content should not be accessible from Python, so we don't interface it
    # nanobind cannot bind to functions which take a **
    - "LoadVector" 
    # should not need to insert a checkpoint from Python
    - "InsertVector"
  sundials_adjointstepper:
    path: sundials/pysundials_adjointstepper_generated.hpp
    headers:
    - ../../include/sundials/sundials_adjointstepper.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **
  sundials_context:
    path: sundials/pysundials_context_generated.hpp
    headers:
    - ../../include/sundials/sundials_context.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **, so we do something custom
    # TODO(CJB): add support for these functions
    # nanobind cannot bind to functions which take a **
    - "GetProfiler" 
    - "GetLogger"
  sundials_domeigestimator:
    path: sundials/pysundials_domeigestimator_generated.hpp
    headers:
    - ../../include/sundials/sundials_domeigestimator.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **, so we do something custom
    - "SUNDomEigEstimator_SetATimes" # nanobind cannot bind to functions which take a function pointer, so we do something custom
  sundials_errors:
    path: sundials/pysundials_errors_generated.hpp
    headers:
    - ../../include/sundials/sundials_errors.h
    enum_exclude_by_name__regex:
    - "SUNErrCode_" # not needed in Python
  sundials_linearsolver:
    path: sundials/pysundials_linearsolver_generated.hpp
    headers:
    - ../../include/sundials/sundials_iterative.h
    - ../../include/sundials/sundials_linearsolver.h
  sundials_logger:
    path: sundials/pysundials_logger_generated.hpp
    headers:
    - ../../include/sundials/sundials_logger.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **, so we do something custom
  sundials_matrix:
    path: sundials/pysundials_matrix_generated.hpp
    headers:
    - ../../include/sundials/sundials_matrix.h
  sundials_memory:
    path: sundials/pysundials_memory_generated.hpp
    headers:
    - ../../include/sundials/sundials_memory.h
    fn_exclude_by_name__regex:
    # these functions are not needed in a Python code, so we don't interface them
    - "Alias" 
    - "Wrap" 
    - "Alloc*"
    - "Dealloc" 
    - "Copy*" 
    class_exclude_by_name__regex:
    - "SUNMemory_" # not needed in Python
  sundials_nonlinearsolver:
    path: sundials/pysundials_nonlinearsolver_generated.hpp
    headers:
    - ../../include/sundials/sundials_nonlinearsolver.h
    fn_exclude_by_name__regex:
    # TODO(CJB): enable these
    # nanobind cannot bind to functions which take a function pointer
    - "Set.*Fn"
  sundials_nvector:
    path: sundials/pysundials_nvector_generated.hpp
    headers:
    - ../../include/sundials/sundials_nvector.h
    fn_exclude_by_name__regex:
    # we have to have custom handling for the following to get the proper dimensions set for the numpy array
    - "ArrayPointer"
    # these operations for supporting xbraid are not yet available via Python, we will have to evaluate if they are useful/needed
    - "BufPack"
    - "BufUnpack"
    - "BufSize"
    # vector arrays do not need to be created in Python, so we do not interface them
    - "N_VNewVectorArray"
    - "N_VCloneVectorArray"
    - "N_VCloneEmptyVectorArray"
    - "N_VGetVecAtIndexVectorArray"
    - "N_VSetVecAtIndexVectorArray"
  sundials_profiler:
    path: sundials/pysundials_profiler_generated.hpp
    headers:
    - ../../include/sundials/sundials_profiler.h
    fn_exclude_by_name__regex:
    - "Create"
  sundials_stepper:
    path: sundials/pysundials_stepper_generated.hpp
    headers:
    - ../../include/sundials/sundials_stepper.h
    fn_exclude_by_name__regex:
    - "Create" # nanobind cannot bind to functions which take a **, so we do something custom
    - "Set.*Fn" # nanobind cannot bind to functions which take a function pointer, so we do something custom
    # we dont allow access to content from Python
    - "SetContent" 
    - "GetContent"
    # TODO(CJB): add support for these functions
    - "SetForcing" # nanobind cannot bind to functions which take a **
  sundials_types:
    path: sundials/pysundials_types_generated.hpp
    headers:
    - ../../include/sundials/sundials_types.h
