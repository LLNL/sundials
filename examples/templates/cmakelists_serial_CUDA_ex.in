# -----------------------------------------------------------------
# Programmer(s): Slaven Peles and Cody Balos @ LLNL
# -----------------------------------------------------------------
# SUNDIALS Copyright Start
# Copyright (c) 2002-2019, Lawrence Livermore National Security
# and Southern Methodist University.
# All rights reserved.
#
# See the top-level LICENSE and NOTICE files for details.
#
# SPDX-License-Identifier: BSD-3-Clause
# SUNDIALS Copyright End
# -----------------------------------------------------------------
# CMakeLists.txt for @SOLVER@ CUDA examples
#
# This file is generated from a template using various variables
# set at configuration time. It can be used as a template for
# other user CMakeLists configuration files.
# -----------------------------------------------------------------

cmake_minimum_required(VERSION 3.10)

# Use the same compilers used to build SUNDIALS
set(CMAKE_C_COMPILER @CMAKE_C_COMPILER@)
set(CMAKE_CXX_COMPILER @CMAKE_CXX_COMPILER@)
set(CMAKE_CUDA_COMPILER @CMAKE_CUDA_COMPILER@)
set(CMAKE_CUDA_HOST_COMPILER @CMAKE_CUDA_HOST_COMPILER@)

# Specify project name and languages
project(@SOLVER@_CUDA_examples C CXX CUDA)

# Need this as long as CUDA libraries like cuSOLVER are not
# available through some other way.
find_package(CUDA REQUIRED)

# Enable testing
include(CTest)

# Set the names of the examples to be built and their dependencies
set(examples @EXAMPLES@)
set(examples_dependencies @EXAMPLES_DEPENDENCIES@)

set(examples_cusp @EXAMPLES_CUSP@)
set(examples_dependencies_cusp @EXAMPLES_DEPENDENCIES_CUSP@)

# Specify the path to SUNDIALS header files
set(SUNDIALS_INC_DIR @CMAKE_INSTALL_PREFIX@/include
  CACHE STRING "Location of SUNDIALS header files")

# Specify the path to SUNDIALS libraries
set(SUNDIALS_LIB_DIR @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@)

# Find the @SOLVER@ library
find_library(SUNDIALS_SOLVER_LIB
  @SOLVER_LIB@ ${SUNDIALS_LIB_DIR}
  DOC "@SOLVER@ library")

# Find the NVECTOR library
find_library(SUNDIALS_NVEC_LIB
  @NVECTOR_LIB@ ${SUNDIALS_LIB_DIR}
  DOC "NVECTOR library")

# Set additional libraries
set(SUNDIALS_EXTRA_LIB @LIBS@ CACHE STRING "Additional libraries")

# List of all libraries
set(SUNDIALS_LIBS ${SUNDIALS_SOLVER_LIB} ${SUNDIALS_NVEC_LIB} ${SUNDIALS_EXTRA_LIB})

# Create targets for each example
foreach(example ${examples})

  if(NOT TARGET ${example})

    # example source files
    add_executable(${example} ${example}.cu ${examples_dependencies})

    # set c++11
    target_compile_features(${example} PRIVATE cxx_std_11)

    # directories to include
    target_include_directories(${example} PRIVATE ${SUNDIALS_INC_DIR})

    # libraries to link against
    target_link_libraries(${example} ${SUNDIALS_LIBS})

    # add the example to ctest
    add_test(NAME ${example} COMMAND ${example})

  endif()

endforeach()


# Create targets for each example
if(examples_cusp)

  # Find the linear solver library
  find_library(SUNDIALS_CUSOLVERSP_BATCHQR_LIB
    sundials_sunlinsolcusolversp ${SUNDIALS_LIB_DIR}
    DOC "Sundials cuSolverSp linear solver library")

  # Build each example one by one
  foreach(example ${examples_cusp})

    if(NOT TARGET ${example})

      # example source files
      add_executable(${example} ${example}.cu ${examples_dependencies_cusp})

      # set c++11
      target_compile_features(${example} PRIVATE cxx_std_11)

      # directories to include
      target_include_directories(${example} PRIVATE ${SUNDIALS_INC_DIR})

      # libraries to link against
      target_link_libraries(${example} ${SUNDIALS_LIBS})
      target_link_libraries(${example} ${SUNDIALS_CUSOLVERSP_BATCHQR_LIB})
      target_link_libraries(${example} ${CUDA_cusolver_LIBRARY})
      target_link_libraries(${example} ${CUDA_cusparse_LIBRARY})

      # add the example to ctest
      add_test(NAME ${example} COMMAND ${example})

    endif()

  endforeach()

endif()
