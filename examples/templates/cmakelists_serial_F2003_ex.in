# -----------------------------------------------------------------
# Programmer(s): Cody J. Balos @ LLNL
# -----------------------------------------------------------------
# SUNDIALS Copyright Start
# Copyright (c) 2002-2019, Lawrence Livermore National Security
# and Southern Methodist University.
# All rights reserved.
#
# See the top-level LICENSE and NOTICE files for details.
#
# SPDX-License-Identifier: BSD-3-Clause
# SUNDIALS Copyright End
# -----------------------------------------------------------------
# CMakeLists.txt for @SOLVER@ Fortran 2003 interface examples
#
# This file is generated from a template using various variables
# set at configuration time. It can be used as a template for
# other user CMakeLists configuration files.
# -----------------------------------------------------------------

cmake_minimum_required(VERSION 3.5)

# Specify project name
project(F2003_@SOLVER@ Fortran)

# Enable testing
include(CTest)

mark_as_advanced(EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH)

# Set the names of the examples to be built
set(examples @EXAMPLES@)
set(examples_dependencies @EXAMPLES_DEPENDENCIES@)
set(examples_klu @EXAMPLES_KLU@)

# Set cmake variables from template inputsd
set(NVEC_LIB  "@NVEC_LIB@"  CACHE STRING "NVECTOR library")
set(SUNLS_LIB "@SUNLS_LIB@" CACHE STRING "SUNLinearSolver library")
set(KLU_LIBRARIES "@KLU_LIBRARIES@")

# Specify path to the Fortran module files
set(SUNDIALS_INC_DIR
  @CMAKE_INSTALL_PREFIX@/@Fortran_INSTALL_MODDIR@
  CACHE STRING
  "Location of SUNDIALS Fortran module files")

# Include path to SUNDIALS Fortran module files
include_directories(${SUNDIALS_INC_DIR})

# Set search path for SUNDIALS libraries
set(SUNDIALS_LIB_DIR @libdir@)

# Find the SUNDIALS solver's library
find_library(SUNDIALS_SOLVER_LIB
  @SOLVER_LIB@ ${SUNDIALS_LIB_DIR}
  DOC "@SOLVER@ library")

find_library(SUNDIALS_SOLVER_FLIB
  @SOLVER_FLIB@ ${SUNDIALS_LIB_DIR}
  DOC "@SOLVER@ library")

# Find the NVECTOR library
if("${NVEC_LIB}" STREQUAL "")
  # No additional NVECTOR library necessary
else()
  # Find the additonal NVECTOR library
  find_library(SUNDIALS_NVEC_LIB
    @NVEC_LIB@ ${SUNDIALS_LIB_DIR}
    DOC "NVECTOR library")

  # Find the additonal NVECTOR library
  find_library(SUNDIALS_NVEC_FLIB
    @NVEC_FLIB@ ${SUNDIALS_LIB_DIR}
    DOC "NVECTOR library")
endif()

if("${SUNLS_LIB}" STREQUAL "")
  # No additional SUNLinearSolver library necessary
else()
  # Find the additional SUNLinearSolver library
  find_library(SUNDIALS_SUNLS_LIB
    @SUNLS_LIB@ ${SUNDIALS_LIB_DIR}
    DOC "SUNLinearSolver library")

  find_library(SUNDIALS_SUNLS_FLIB
    @SUNLS_FLIB@ ${SUNDIALS_LIB_DIR}
    DOC "SUNLinearSolver library")
endif()

# Set additional libraries
set(SUNDIALS_EXTRA_LIB @LIBS@ CACHE STRING "Additional libraries")

# List of all libraries
set(SUNDIALS_LIBS
  ${SUNDIALS_SOLVER_FLIB}
  ${SUNDIALS_NVEC_FLIB}
  ${SUNDIALS_SUNLS_FLIB}
  ${SUNDIALS_SOLVER_LIB}
  ${SUNDIALS_NVEC_LIB}
  ${SUNDIALS_SUNLS_LIB}
  ${SUNDIALS_EXTRA_LIB})

# Build each example one by one
foreach(example ${examples})

  # Keep fortran modules to a unique directory to avoid naming collisions
  set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/${example}.dir)

  # example source files
  add_executable(${example} ${example}.f90 ${examples_dependencies})

  # libraries to link agaisnt
  target_link_libraries(${example} ${SUNDIALS_LIBS})

  # add the example to ctest
  add_test(NAME ${example} COMMAND ${example})

endforeach(example ${examples})

# Build each example one by one
foreach(example ${examples_klu})

  # Keep fortran modules to a unique directory to avoid naming collisions
  set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/${example}.dir)

  # example source files
  add_executable(${example} ${example}.f90)

  # libraries to link agaisnt
  target_link_libraries(${example} ${SUNDIALS_LIBS} ${KLU_LIBRARIES})

  # add the example to ctest
  add_test(NAME ${example} COMMAND ${example})

endforeach(example ${examples_klu})
