#!/usr/bin/env groovy
pipeline {
    agent any
    stages {
        stage('print-environment') {
            steps {
                sh("printenv")
            }
        }
        stage('main-develop-tests') {
            when {
                branch comparator: 'REGEXP', pattern: '^(main|develop)$'
            }
            steps {
                sh("cd test && ./test_driver.sh --testtype PR")
            }
        }
        stage('release-tests') {
            when {
                branch comparator: 'REGEXP', pattern: '^(release.*)$'
            }
            steps {
                sh("cd test && ./test_driver.sh --testtype Release")
            }
        }
        stage('branch-tests') {
            when {
                not {
                    branch comparator: 'REGEXP', pattern: '^(main|develop|release.*)$'
                }
            }
            matrix {
                axes {
                    axis {
                        name 'REALTYPE'
                        values 'single', 'double', 'extended'
                    }
                    axis {
                        name 'INDEXSIZE'
                        values '32', '64'
                    }
                }
                stages {
                    stage('build-and-test') {
                        steps {
                            echo "Do test for ${REALTYPE} and ${INDEXSIZE}"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Tests Complete'
            archiveArtifacts artifacts: 'test/**/build_*/Testing/Temporary/LastTest.log'
        }
        failure {
            sh("cd test && ./notify.py failed ${env.BRANCH_NAME} ${env.BUILD_URL}")
        }
        fixed {
            sh("cd test && ./notify.py fixed ${env.BRANCH_NAME} ${env.BUILD_URL}")
        }
    }
}
