#!/usr/bin/env groovy
pipeline {
    agent any
    stages {
        stage('print-environment') {
            steps {
                sh("printenv")
            }
        }
        stage('main-develop-tests') {
            when {
                branch comparator: 'REGEXP', pattern: '^(main|develop)$'
            }
            steps {
                sh("cd test && ./test_driver.sh --testtype PR")
            }
        }
        stage('release-tests') {
            when {
                branch comparator: 'REGEXP', pattern: '^(release.*)$'
            }
            steps {
                sh("cd test && ./test_driver.sh --testtype Release")
            }
        }
        stage('branch-tests') {
            when {
                not {
                    branch comparator: 'REGEXP', pattern: '^(main|develop|release.*)$'
                }
            }
            steps {
                sh("cd test && ./test_driver.sh --testtype Branch")
            }
        }
    }
    post {
        always {
            echo 'Tests Complete'
            archiveArtifacts artifacts: 'test/**/build_*/Testing/Temporary/LastTest.log'
        }
        success {
            sh("cd test && ./notify.py passed ${env.BRANCH_NAME} ${env.BUILD_URL}")
        }
        failure {
            sh("cd test && ./notify.py failed ${env.BRANCH_NAME} ${env.BUILD_URL}")
        }
        fixed {
            sh("cd test && ./notify.py fixed ${env.BRANCH_NAME} ${env.BUILD_URL}")
        }
    }
}
