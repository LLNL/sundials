# ---------------------------------------------------------------
# SUNDIALS Copyright Start
# Copyright (c) 2002-2021, Lawrence Livermore National Security
# and Southern Methodist University.
# All rights reserved.
#
# See the top-level LICENSE and NOTICE files for details.
#
# SPDX-License-Identifier: BSD-3-Clause
# SUNDIALS Copyright End
# ---------------------------------------------------------------

# ------------------------------------------------------------------------------
# Basic builds w/o TPLs
# ------------------------------------------------------------------------------
### Builds without TPLs
# How to easily add +f2003 when int64 and double?

# quartz_clang:
#   parallel:
#     matrix:
#       - COMPILER_SPEC: clang@12.0.0
#         INDEX_SPEC: [~int64, +int64]
#         PRECISION_SPEC: [double]
#   variables:
#     SPEC: "%${COMPILER_SPEC} ${INDEX_SPEC} precision=${PRECISION_SPEC}"
#   extends: .quartz_build_and_test

# quartz_gcc:
#   parallel:
#     matrix:
#       - COMPILER_SPEC: gcc@10.3.1
#         INDEX_SPEC: [~int64, +int64]
#         PRECISION_SPEC: [double]
#   variables:
#     SPEC: "%${COMPILER_SPEC} ${INDEX_SPEC} precision=${PRECISION_SPEC}"
#   extends: .quartz_build_and_test

# quartz_intel:
#   parallel:
#     matrix:
#       - COMPILER_SPEC: intel@19.1.2
#         INDEX_SPEC: [~int64, +int64]
#         PRECISION_SPEC: [double]
#   variables:
#     SPEC: "%${COMPILER_SPEC} ${INDEX_SPEC} precision=${PRECISION_SPEC}"
#   extends: .quartz_build_and_test

# ------------------------------------------------------------------------------
# Builds with TPLs
# ------------------------------------------------------------------------------
# +petsc ~hypre ~superlu-dist ~int64 ~hdf5
# +superlu-dist == segfaults

quartz_clang_tpls:
  parallel:
    matrix:
      - COMPILER_SPEC: clang@14.0.6
        INDEX_SPEC: [~int64]
        PRECISION_SPEC: [double]
  variables:
    SPEC: "%${COMPILER_SPEC} cstd=99 cxxstd=14 ${INDEX_SPEC} precision=${PRECISION_SPEC} +mpi +openmp +hypre +superlu-dist +lapack +klu +petsc ^suite-sparse@5.13.0 ^openblas"
  extends: .quartz_build_and_test

quartz_gcc_tpls:
  parallel:
    matrix:
      - COMPILER_SPEC: gcc@10.3.1
        INDEX_SPEC: [~int64]
        PRECISION_SPEC: [double]
  variables:
    # For some reason nvhpc gets picked up for lapack w/o ^openblas
    SPEC: "%${COMPILER_SPEC} cstd=99 cxxstd=14 ${INDEX_SPEC} precision=${PRECISION_SPEC} +mpi +openmp +hypre +superlu-dist +lapack +klu +petsc ^suite-sparse@5.13.0 ^openblas"
  extends: .quartz_build_and_test

quartz_intel_tpls:
  parallel:
    matrix:
      - COMPILER_SPEC: intel@19.1.2
        INDEX_SPEC: [~int64]
        PRECISION_SPEC: [double]
  variables:
    # perl@5.32.0 needed until spack v0.20.0: https://github.com/spack/spack/pull/35666 
    SPEC: "%${COMPILER_SPEC} cstd=99 cxxstd=14 ${INDEX_SPEC} precision=${PRECISION_SPEC} +mpi +openmp +hypre ~superlu-dist +lapack +klu ^suite-sparse@5.13.0 ^perl@5.32.0"
  extends: .quartz_build_and_test
