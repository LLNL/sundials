.. ----------------------------------------------------------------
   SUNDIALS Copyright Start
   Copyright (c) 2002-2021, Lawrence Livermore National Security
   and Southern Methodist University.
   All rights reserved.

   See the top-level LICENSE and NOTICE files for details.

   SPDX-License-Identifier: BSD-3-Clause
   SUNDIALS Copyright End
   ----------------------------------------------------------------

.. _ARKODE.Usage.MRIStep.InterpolatedOutput:

Interpolated output function
--------------------------------

An optional function :c:func:`MRIStepGetDky()` is available to obtain
additional values of solution-related quantities.  This function
should only be called after a successful return from
:c:func:`MRIStepEvolve()`, as it provides interpolated values either of
:math:`y` or of its derivatives (up to the 3rd derivative)
interpolated to any value of :math:`t` in the last internal step taken
by :c:func:`MRIStepEvolve()`.  Internally, this "dense output" or
"continuous extension" algorithm is identical to the algorithm used for
the maximum order implicit predictors, described in
:numref:`ARKODE.Mathematics.Predictors.Max`, except that derivatives of the
polynomial model may be evaluated upon request.



.. c:function:: int MRIStepGetDky(void* arkode_mem, realtype t, int k, N_Vector dky)

   Computes the *k*-th derivative of the function
   :math:`y` at the time *t*,
   i.e. :math:`y^{(k)}(t)`, for values of the
   independent variable satisfying :math:`t_n-h_n \le t \le t_n`, with
   :math:`t_n` as current internal time reached, and :math:`h_n` is
   the last internal step size successfully used by the solver.  This
   routine uses an interpolating polynomial of degree *min(degree, 5)*,
   where *degree* is the argument provided to
   :c:func:`MRIStepSetInterpolantDegree()`.  The user may request *k* in the
   range {0,..., *min(degree, kmax)*} where *kmax* depends on the choice of
   interpolation module. For Hermite interpolants *kmax = 5* and for Lagrange
   interpolants *kmax = 3*.

   **Arguments:**

   * *arkode_mem* -- pointer to the MRIStep memory block.

   * *t* -- the value of the independent variable at which the
     derivative is to be evaluated.

   * *k* -- the derivative order requested.

   * *dky* -- output vector (must be allocated by the user).

   **Return value:**

   * *ARK_SUCCESS* if successful

   * *ARK_BAD_K* if *k* is not in the range {0,..., *min(degree, kmax)*}.

   * *ARK_BAD_T* if *t* is not in the interval :math:`[t_n-h_n, t_n]`

   * *ARK_BAD_DKY* if the *dky* vector was ``NULL``

   * *ARK_MEM_NULL* if the MRIStep memory is ``NULL``

   **Notes:** It is only legal to call this function after a successful
   return from :c:func:`MRIStepEvolve()`.

   A user may access the values :math:`t_n` and :math:`h_n` via the
   functions :c:func:`MRIStepGetCurrentTime()` and
   :c:func:`MRIStepGetLastStep()`, respectively.
