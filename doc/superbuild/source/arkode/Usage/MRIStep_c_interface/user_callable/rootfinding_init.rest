.. ----------------------------------------------------------------
   SUNDIALS Copyright Start
   Copyright (c) 2002-2021, Lawrence Livermore National Security
   and Southern Methodist University.
   All rights reserved.

   See the top-level LICENSE and NOTICE files for details.

   SPDX-License-Identifier: BSD-3-Clause
   SUNDIALS Copyright End
   ----------------------------------------------------------------

.. _ARKODE.Usage.MRIStep.RootFinding:

Rootfinding initialization function
--------------------------------------

As described in the section :numref:`ARKODE.Mathematics.Rootfinding`, while
solving the IVP, ARKODE's time-stepping modules have the capability to
find the roots of a set of user-defined functions.  In the MRIStep module root
finding is performed between slow solution time steps only (i.e., it is not
performed within the sub-stepping a fast time scales).  To activate the
root-finding algorithm, call the following function.  This is normally
called only once, prior to the first call to
:c:func:`MRIStepEvolve()`, but if the rootfinding problem is to be
changed during the solution, :c:func:`MRIStepRootInit()` can also be
called prior to a continuation call to :c:func:`MRIStepEvolve()`.


.. c:function:: int MRIStepRootInit(void* arkode_mem, int nrtfn, ARKRootFn g)

   Initializes a rootfinding problem to be solved during the
   integration of the ODE system.  It must be called after
   :c:func:`MRIStepCreate()`, and before :c:func:`MRIStepEvolve()`.

   **Arguments:**
      * *arkode_mem* -- pointer to the MRIStep memory block.
      * *nrtfn* -- number of functions :math:`g_i`, an integer :math:`\ge` 0.
      * *g* -- name of user-supplied function, of type :c:func:`ARKRootFn()`,
        defining the functions :math:`g_i` whose roots are sought.

   **Return value:**
      * *ARK_SUCCESS* if successful
      * *ARK_MEM_NULL*  if the MRIStep memory was ``NULL``
      * *ARK_MEM_FAIL*  if there was a memory allocation failure
      * *ARK_ILL_INPUT* if *nrtfn* is greater than zero but *g* = ``NULL``.

   **Notes:** To disable the rootfinding feature after it has already
   been initialized, or to free memory associated with MRIStep's
   rootfinding module, call *MRIStepRootInit* with *nrtfn = 0*.

   Similarly, if a new IVP is to be solved with a call to
   :c:func:`MRIStepReInit()`, where the new IVP has no rootfinding
   problem but the prior one did, then call *MRIStepRootInit* with
   *nrtfn = 0*.

   Rootfinding is only supported for the slow (outer) integrator and should not
   be actived for the fast (inner) integrator.
